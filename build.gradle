plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'zero'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
        runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        implementation group: "net.sf.oval", name: "oval", version: "3.2.1"

        // https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox
        implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '3.0.4'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named("processResources") {
    dependsOn copyFrontendBuild
}

tasks.register('installFrontend', Exec) {
    workingDir "$projectDir/frontend"
    environment "PATH", "/opt/homebrew/bin:" + System.getenv("PATH") // chatgpt

    //commandLine 'cmd', '/c', 'npm install' // For Windows

    if (System.getProperty("os.name").toLowerCase().contains("win")) {
        commandLine 'cmd', '/c', 'npm install'
    } else {
        commandLine '/opt/homebrew/bin/npm', 'install'
    }
}

tasks.register('buildFrontend', Exec) {
    dependsOn installFrontend
    workingDir "$projectDir/frontend"
    //commandLine 'cmd', '/c', 'npm run build'
    environment "PATH", "/opt/homebrew/bin:" + System.getenv("PATH") // chatgpt

    if (System.getProperty("os.name").toLowerCase().contains("win")) {
        commandLine 'cmd', '/c', 'npm run build'
    } else {
        commandLine '/opt/homebrew/bin/npm', 'run', 'build'
    }
}

tasks.register('copyFrontendBuild', Copy) {
    dependsOn buildFrontend
    from "$projectDir/frontend/build"
    into "$projectDir/src/main/resources/static"
}

bootJar {
    dependsOn copyFrontendBuild
}
