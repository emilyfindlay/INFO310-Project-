DROP TABLE IF EXISTS invoice_item;
DROP TABLE IF EXISTS invoice;
DROP TABLE IF EXISTS product;
DROP TABLE IF EXISTS client;
DROP TABLE IF EXISTS business;
DROP TABLE IF EXISTS address;

CREATE TABLE address
(
    address_id      SERIAL,
    street_address1 VARCHAR(50) NOT NULL,
    street_address2 VARCHAR(50),
    city            VARCHAR(50) NOT NULL,
    region          VARCHAR(50),
    post_code       VARCHAR(10) NOT NULL,
    country         VARCHAR(50), --optional field
    CONSTRAINT address_pk PRIMARY KEY (address_id)
);

CREATE TABLE business
(
    business_id         SERIAL      NOT NULL,
    address_id          INT         NOT NULL,
    business_name       VARCHAR(50) NOT NULL,
    bank_account_number VARCHAR(50) NOT NULL, -- Changed from bank_account_name
    gst_number          VARCHAR(15),
    email               VARCHAR(50) NOT NULL,
    phone               VARCHAR(10),          -- optional
    website_link        VARCHAR(255),
--     logo                BYTEA,
    CONSTRAINT business_pk PRIMARY KEY (business_id),
    CONSTRAINT business_fk_address FOREIGN KEY (address_id) REFERENCES address (address_id)
);

CREATE TABLE client
(
    client_id  INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000),                    --all clients must be saved, start from 1000
    address_id INT,                                                                       --not all clients must have an address
    name       VARCHAR(50) NOT NULL,
    email      VARCHAR(50) NOT NULL,
    phone      VARCHAR(10),
    CONSTRAINT client_pk PRIMARY KEY (client_id),
    CONSTRAINT client_fk_address FOREIGN KEY (address_id) REFERENCES address (address_id)
);

CREATE TABLE product
(
    product_id                SERIAL,
    product_type              BOOLEAN        NOT NULL,
    user_defined_product_name VARCHAR(50), --name user saves a product under if they choose to do so
    product_description       VARCHAR(255)    NOT NULL,
    product_price             DECIMAL(10, 2) NOT NULL,
    CONSTRAINT product_pk PRIMARY KEY (product_id)
);

CREATE TABLE invoice
(
    invoice_id    SERIAL,
    business_id   INT            NOT NULL,
    client_id     INT,                     --not all invoice must have a client.
    creation_date DATE           NOT NULL, --invoices must have a date of creation
    issued_date   DATE,                    --invoice can be created but not issued
    due_date      DATE           NOT NULL, --invoice need due date???
    status        VARCHAR(20)    NOT NULL,
    total_gst     DECIMAL(10, 2) NOT NULL,
    invoice_total DECIMAL(10, 2) NOT NULL,
    CONSTRAINT invoice_pk PRIMARY KEY (invoice_id),
    CONSTRAINT invoice_fk_client FOREIGN KEY (client_id) REFERENCES client (client_id),
    CONSTRAINT invoice_fk_business FOREIGN KEY (business_id) REFERENCES business (business_id)
);

CREATE TABLE invoice_item
(
    invoice_id          INT            NOT NULL,
    product_id          INT            NOT NULL, -- not all items in an invoice need to be a saved product
    quantity            INT            NOT NULL,
    discount            DECIMAL(5, 2)  NOT NULL DEFAULT 0.00, -- Enforced as NOT NULL with a default value of 0.00
    unit_price          DECIMAL(10, 2) NOT NULL,
    subtotal            DECIMAL(10, 2) NOT NULL, -- calculated by backend
    CONSTRAINT invoice_item_pk PRIMARY KEY (invoice_id, product_id),
    CONSTRAINT invoice_item_fk_invoice FOREIGN KEY (invoice_id) REFERENCES invoice (invoice_id),
    CONSTRAINT invoice_item_fk_product FOREIGN KEY (product_id) REFERENCES product (product_id)
);
